#!/bin/bash
## Get data
STATUS="$(playerctl status 2>/dev/null)"
COVER="/tmp/.music_cover.jpg"

## Get status
get_status() {
	if [[ "$STATUS" == "Playing" ]]; then
		echo "images/music/pause-button.png"
	else
		echo "images/music/play-button.png"
	fi
}

## Get song
get_song() {
	song=$(playerctl metadata --format "{{ title }}" 2>/dev/null)
	if [[ -z "$song" ]] || [[ "$song" == "No players found" ]]; then
		echo "Offline"
	else
		echo "$song"
	fi	
}

## Get artist
get_artist() {
	artist=$(playerctl metadata --format "{{ artist }}" 2>/dev/null)
	if [[ -z "$artist" ]] || [[ "$artist" == "No players found" ]]; then
		echo "Offline"
	else
		echo "$artist"
	fi	
}

## Get time (percentage)
get_time() {
	position=$(playerctl position 2>/dev/null)
	length=$(playerctl metadata mpris:length 2>/dev/null)
	
	if [[ -z "$position" ]] || [[ -z "$length" ]] || [[ "$length" == "0" ]]; then
		echo "0"
	else
		# Convert microseconds to seconds for length
		length_sec=$((length / 1000000))
		percentage=$(echo "scale=0; ($position * 100) / $length_sec" | bc 2>/dev/null)
		echo "${percentage:-0}"
	fi	
}

## Get current time
get_ctime() {
	position=$(playerctl position 2>/dev/null)
	if [[ -z "$position" ]]; then
		echo "0:00"
	else
		# Convert to minutes:seconds
		minutes=$((${position%.*} / 60))
		seconds=$((${position%.*} % 60))
		printf "%d:%02d" "$minutes" "$seconds"
	fi	
}

## Get total time
get_ttime() {
	length=$(playerctl metadata mpris:length 2>/dev/null)
	if [[ -z "$length" ]] || [[ "$length" == "0" ]]; then
		echo "0:00"
	else
		# Convert microseconds to seconds
		length_sec=$((length / 1000000))
		minutes=$((length_sec / 60))
		seconds=$((length_sec % 60))
		printf "%d:%02d" "$minutes" "$seconds"
	fi	
}

## Get cover
get_cover() {
	# Try to get album art URL from metadata
	art_url=$(playerctl metadata mpris:artUrl 2>/dev/null)
	
	if [[ -n "$art_url" ]]; then
		# Handle file:// URLs
		if [[ "$art_url" == file://* ]]; then
			# Remove file:// prefix and copy the file
			local_file="${art_url#file://}"
			if [[ -f "$local_file" ]]; then
				cp "$local_file" "$COVER" 2>/dev/null
				echo "$COVER"
				return
			fi
		elif [[ "$art_url" == http* ]]; then
			# Download from URL
			curl -s "$art_url" -o "$COVER" 2>/dev/null
			if [[ -f "$COVER" ]] && [[ -s "$COVER" ]]; then
				echo "$COVER"
				return
			fi
		fi
	fi
	
	# Fallback to default image
	echo "images/music.png"
}

## Execute accordingly
case "$1" in
	"--song")
		get_song
		;;
	"--artist")
		get_artist
		;;
	"--status")
		get_status
		;;
	"--time")
		get_time
		;;
	"--ctime")
		get_ctime
		;;
	"--ttime")
		get_ttime
		;;
	"--cover")
		get_cover
		;;
	"--toggle")
		playerctl play-pause
		;;
	"--next")
		playerctl next
		get_cover
		;;
	"--prev")
		playerctl previous
		get_cover
		;;
	*)
		echo "Usage: $0 [--song|--artist|--status|--time|--ctime|--ttime|--cover|--toggle|--next|--prev]"
		exit 1
		;;
esac
