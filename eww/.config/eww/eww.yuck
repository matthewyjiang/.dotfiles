;; Music vars
(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
(defpoll COVER :interval "1s" `scripts/music_info --cover`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)

;; Main bar widget
(defwidget bar []
  (centerbox :orientation "h"
                :halign "fill"
    (workspaces)
    (music)
    (sidestuff)))

;; Right side widgets
(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (box :class "speaker-icon" :orientation "h")
    (metric :label ""
            :value volume
            :onchange "wpctl set-volume @DEFAULT_AUDIO_SINK@ {}%")
    time
    (button :class "notification-button"
            :onclick "swaync-client -t")
  ))
   

;; Hyprland workspaces widget
(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 0
    (for workspace in workspaces_json
      (button :class {workspace.active ? "workspace-active" : "workspace-inactive"}
              :onclick "hyprctl dispatch workspace ${workspace.id}"
              "${workspace.id}"))))

;; Music widget
(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :valign "fill"
       :vexpand "false"
       (box :orientation "h" :space-evenly false :spacing 10
            (box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
            (box :class "musicbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
		        (label :class "song" :halign "start" :wrap "false" :limit-width 20 :text SONG)
		        (label :class "artist" :halign "start" :wrap "false" :limit-width 20 :text ARTIST)
            )
        )
       
   (box :class "musicbuttons" :orientation "h" :spacing 10 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
		(button :style "background-image: url('images/music/previous-button.png');" :class "trackbutton" :onclick "scripts/music_info --prev")
		(button :style "background-image: url('${STATUS}');" :class "playbutton" :onclick "scripts/music_info --toggle")
		(button :style "background-image: url('images/music/next-button.png');" :class "trackbutton" :onclick "scripts/music_info --next"))
  )
)
   

;; Metric widget for sliders
(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(defpoll workspaces_json :interval "120ms"
  "scripts/get-workspaces")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "9s"
  "date '+%m/%d %I:%M %p'")

;; Main window
(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "10px"
                      :y "10px"
                      :width "1900px"
                      :height "15px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "40px")
  :exclusive true
  (bar))
